BASE DE DATOS
¿Qué es una Base de Datos?

Una base de datos es un sistema que permite almacenar, organizar y acceder a información de manera estructurada.
El lenguaje utilizado para interactuar con ellas es SQL (Structured Query Language), que en español significa Lenguaje de Consulta Estructurado.

Tipos de SQL y Motores de Base de Datos

SQL Server: Pertenece a Microsoft y se usa ampliamente en entornos empresariales.

Oracle: Especializado en gestión avanzada de bases de datos.

MySQL: Popular en desarrollo web y entornos educativos.

Avances personales realizados

Creación de un repositorio en GitHub.

Uso de SQL Server Management Studio.

Implementación de claves primarias (PK) y foráneas (FK).

Creación de relaciones entre clientes, empleados, ventas, proveedores y productos.

Archivos creados:

script_semana2.sql: contiene las tablas con PK y FK.

modelo_ER.png: diagrama entidad–relación con relaciones implementadas.

Conceptos Clave
Clave Primaria (Primary Key)

Valor único que identifica cada fila en una tabla.
Ejemplo: id_cliente

Clave Foránea (Foreign Key)

Campo que relaciona una tabla con otra.
Ejemplo: id_cliente en la tabla Venta.

Lenguaje DML (Data Manipulation Language)
Comando	Función
SELECT	Consultar datos
INSERT	Insertar datos
UPDATE	Modificar datos
DELETE	Eliminar datos
CREATE / ALTER / DROP	Crear, modificar o eliminar estructuras
Ejemplos:
SELECT * FROM Cliente WHERE ciudad = 'Arequipa';

INSERT INTO Playerinformation
(NombreJugador, PosicionCancha, Dorsal, Nacionalidad, FechaNacimiento)
VALUES
('Joan Garcia', 'Portero', 13, 'Español', '2001-05-04');


Ordenar resultados:

SELECT * FROM Playerinformation ORDER BY Dorsal ASC;


Eliminar registros:

DELETE FROM Playerinformation WHERE Dorsal = 3;


Actualizar registros:

UPDATE Playerinformation SET Dorsal = 18 WHERE NombreJugador = 'Gerard Martín';


Agregar columna con clave primaria autoincremental:

ALTER TABLE Playerinformation
ADD Id INT IDENTITY(1,1) PRIMARY KEY;

Unión de Tablas (JOINs)
Tipo de JOIN	Descripción
INNER JOIN	Muestra solo coincidencias entre ambas tablas.
LEFT JOIN	Muestra todos los registros de la tabla izquierda y las coincidencias de la derecha.
RIGHT JOIN	Muestra todos los registros de la tabla derecha.
FULL JOIN	Une todos los registros, incluso los que no coinciden.
CROSS JOIN	Genera todas las combinaciones posibles (producto cartesiano).

Ejemplo:

SELECT * 
FROM Playerinformation
INNER JOIN PlayerContrato 
ON Playerinformation.Id = PlayerContrato.Id;

Operadores en SQL
Lógicos

AND: Verdadero si todas las condiciones lo son.

OR: Verdadero si al menos una condición lo es.

NOT: Niega la condición.

Comparación

=, !=, <>, >, <, >=, <=

Condicionales adicionales

BETWEEN ... AND ...

IN (...)

LIKE

IS NULL / IS NOT NULL

Orden de precedencia

NOT

AND

OR

Consultas avanzadas

Agrupación:

SELECT Nacionalidad, COUNT(*) AS TotalJugadores
FROM Playerinformation
GROUP BY Nacionalidad
HAVING COUNT(*) > 1;


Clasificación por rango:

SELECT p.NombreJugador, c.Salario,
       CASE 
            WHEN c.Salario < 5000000 THEN 'Bajo'
            WHEN c.Salario BETWEEN 5000000 AND 15000000 THEN 'Medio'
            ELSE 'Alto'
       END AS CategoriaSueldo
FROM Playerinformation p
INNER JOIN PlayerContrato c ON p.Id = c.Id;

Subconsultas y UNION

Subconsulta escalar: devuelve un solo valor (ej. promedio de salarios).

Subconsulta de tabla: devuelve varias filas.

Correlacionada: depende de la consulta principal.

Operadores útiles:

IN, EXISTS, NOT EXISTS, ANY, ALL

UNION y UNION ALL:

UNION: une resultados y elimina duplicados.

UNION ALL: mantiene duplicados y es más rápido.

PIVOT

El comando PIVOT se utiliza para reorganizar datos y presentarlos de manera más analítica (por columnas en lugar de filas).

Procedimientos y Funciones
Procedimiento almacenado (Stored Procedure)

Bloque de instrucciones SQL que se ejecuta como una unidad.
Sirve para automatizar operaciones complejas o repetitivas.

Función (Function)

Código SQL que recibe parámetros y devuelve un valor o tabla.
No modifica datos, se usa para cálculos o transformaciones.

Implementación de SAKILA en MySQL Workbench

Comandos básicos:

SHOW TABLES;
USE sakila;



